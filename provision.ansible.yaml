---

- hosts: all

  sudo: yes

  tasks:
    - name: Upgrade cache and system (safe upgrade)
      apt: upgrade=safe update_cache=yes

    - name: Make sure nginx git python3 and python3-pip are present
      apt: pkg=nginx,git,python3,python3-pip state=present

    - name: Make sure virtualenv is present
      pip: name=virtualenv executable=pip3

    - name: Allow long hostnames in nginx
      lineinfile:
        dest=/etc/nginx/nginx.conf
        regexp='(\s+)#? ?server_names_hash_bucket_size'
        backrefs=yes
        line='\1server_names_hash_bucket_size 64;'

    - name: Git pull
      git: repo=https://github.com/welenofsky/superlists.git
           dest=/home/{{ username }}/sites/{{ host }}/source/
           accept_hostkey=True
           update=True
      notify:
        - restart gunicorn

    - name: Create virtualenv if doesn't exist
      shell: '[ -d virtualenv/ ] || virtualenv --python=python3 virtualenv/'
      args:
        chdir: /home/{{ username }}/sites/{{ host }}/

    - name: Pip install requirements file
      pip: requirements=/home/{{ username }}/sites/{{ host }}/source/requirements.txt
           virtualenv=/home/{{ username }}/sites/{{ host }}/virtualenv

    - name: Update static files
      shell: ../virtualenv/bin/python3 manage.py collectstatic --noinput
      args:
        chdir: /home/{{ username }}/sites/{{ host }}/source
      notify:
        - restart nginx
        - restart gunicorn

    - name: Assures database directory exists
      file: path=/home/{{ username }}/sites/{{ host }}/database state=directory

    - name: Ensure database exists
      shell: '[ -f ../database/db.sqlite3 ] || ../virtualenv/bin/python3 manage.py migrate --noinput'
      args:
        chdir: /home/{{ username }}/sites/{{ host }}/source
      notify:
        - restart nginx
        - restart gunicorn

    - name: Remove nginx default if exists
      shell: '[ ! -f default ] || rm default'
      args:
        chdir: /etc/nginx/sites-available/

    - name: Add nginx config to sites-available
      template: src=./nginx.conf.j2
                dest=/etc/nginx/sites-available/{{ host }}
      notify:
          - restart nginx

    - name: Add symlink in nginx sites-enabled
      file: src=/etc/nginx/sites-available/{{ host }}
            dest=/etc/nginx/sites-enabled/{{ host }} state=link
      notify:
          - restart nginx

    - name: Write gunicorn init script
      template: src=./gunicorn-upstart.conf.j2
                dest=/etc/init/gunicorn-{{ host }}.conf
      notify:
          - restart gunicorn

    - name: Make sure nginx is running
      service: name=nginx state=running

    - name: Make sure gunicorn is running
      service: name=gunicorn-{{ host }} state=running

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart gunicorn
      service: name=gunicorn-{{ host }} state=restarted
